"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4459],{5318:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>u});var o=t(7378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=o.createContext({}),s=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=s(e.components);return o.createElement(p.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(t),f=r,u=d["".concat(p,".").concat(f)]||d[f]||m[f]||i;return t?o.createElement(u,a(a({ref:n},c),{},{components:t})):o.createElement(u,a({ref:n},c))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=f;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[d]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var o=t(5773),r=(t(7378),t(5318));const i={sidebar_position:12},a="models.json",l={unversionedId:"models.json",id:"models.json",title:"models.json",description:"The models.json file lives in the root of the project folder. This file contains OpenAI model configurations that can override fields of the default model configuration as defined in theaiconfig.json file in the recipe folder.",source:"@site/docs/models.json.md",sourceDirName:".",slug:"/models.json",permalink:"/ai-writer/docs/models.json",draft:!1,editUrl:"https://github.com/svdoever/ai-writer/tree/main/docs/docs/models.json.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"docSidebar",previous:{title:"The project folder",permalink:"/ai-writer/docs/the-project-folder"},next:{title:"output-formats.json",permalink:"/ai-writer/docs/output-formats.json"}},p={},s=[],c={toc:s},d="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"modelsjson"},"models.json"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"models.json")," file lives in the root of the project folder. This file contains OpenAI model configurations that can override fields of the default model configuration as defined in the",(0,r.kt)("a",{parentName:"p",href:"./recipe-ingredients/aiconfig.json"},(0,r.kt)("inlineCode",{parentName:"a"},"aiconfig.json"))," file in the recipe folder. "),(0,r.kt)("p",null,"Override the default model configuration using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--model-override")," option of the ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-writer")," command."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"models.json")," file contains a JSON object with the following structure:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "model-name": {\n    "type": "completion | chat.completion",\n    "completion": {\n        "model": "model-id",\n        "temperature": 0.7,\n        "max_tokens": 64,\n        "top_p": 1,\n        "frequency_penalty": 0,\n        "presence_penalty": 0\n    }\n  }\n}\n')),(0,r.kt)("p",null,"See also ",(0,r.kt)("a",{parentName:"p",href:"/ai-writer/docs/recipe-ingredients/aiconfig.json"},"aiconfig.json")," for more information about the model configuration fields."),(0,r.kt)("p",null,"All fields are optional, and the specified fields are merged with the default model configuration. The ",(0,r.kt)("inlineCode",{parentName:"p"},"stop")," field is an array of strings that are used to stop the completion.\nBy default, the `models.json`` file contains the following model overrides for easy switching between the OpenAI models:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "gpt-4": {\n        "type": "chat.completion",\n        "completion": {\n            "model": "gpt-4"\n        }\n    },\n    "gpt-35": {\n        "type": "chat.completion",\n        "completion": {\n            "model": "gpt-3.5-turbo"\n        }\n    },\n\n    "davinci": {\n        "type": "completion",\n        "completion": {\n            "model": "text-davinci-003"\n        }\n    }\n}\n')),(0,r.kt)("p",null,"On execution of a recipe, the default model configuration can be overridden using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--model-override")," option of the ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-writer")," command. For example, to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"gpt-4")," model, execute the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx ai-writer eli5 --topic elephant --model-override gpt-4 --output eli5/elephant\n")))}m.isMDXComponent=!0}}]);